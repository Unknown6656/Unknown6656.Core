
///////////////////////////////////////////////////////////////////////
//             AUTOGENERATED 2022-09-05 10:57:58.446599              //
//   All your changes to this file will be lost upon re-generation.  //
///////////////////////////////////////////////////////////////////////

using System;

using Unknown6656.Mathematics.LinearAlgebra;

namespace Unknown6656.Mathematics.Analysis;



public partial class Polynomial
{
    /// <summary>
    /// Returns the Hurwitz Matrix associated with this polynomial
    /// </summary>
    public Union<Scalar, Matrix2, Matrix3> HurwitzMatrix => Degree switch
    {
        <= 0 => throw new InvalidOperationException("The Hurwitz matrix is not defined for polynomials of degree zero."),
        1 => (Union<Scalar, Matrix2, Matrix3>)(Scalar)LeadingCoefficient,
        2 => (Union<Scalar, Matrix2, Matrix3>)new Matrix2(
                _coefficients[ 1], 0,
                _coefficients[ 0], _coefficients[ 2]
            ),
        3 => (Union<Scalar, Matrix2, Matrix3>)new Matrix3(
                _coefficients[ 1], _coefficients[ 3], 0,
                _coefficients[ 0], _coefficients[ 2], 0,
                0,          _coefficients[ 1], _coefficients[ 3]
            ),
        _ => throw new NotImplementedException($"The Hurwitz matrix has not (yet) been implemented for a degree of {Degree}.") // TODO!
    };

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1) t) =>
        new(t._0, t._1);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2) t) =>
        new(t._0, t._1, t._2);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3) t) =>
        new(t._0, t._1, t._2, t._3);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4) t) =>
        new(t._0, t._1, t._2, t._3, t._4);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50, Scalar _51) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50, t._51);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50, Scalar _51, Scalar _52) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50, t._51, t._52);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50, Scalar _51, Scalar _52, Scalar _53) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50, t._51, t._52, t._53);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50, Scalar _51, Scalar _52, Scalar _53, Scalar _54) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50, t._51, t._52, t._53, t._54);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50, Scalar _51, Scalar _52, Scalar _53, Scalar _54, Scalar _55) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50, t._51, t._52, t._53, t._54, t._55);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50, Scalar _51, Scalar _52, Scalar _53, Scalar _54, Scalar _55, Scalar _56) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50, t._51, t._52, t._53, t._54, t._55, t._56);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50, Scalar _51, Scalar _52, Scalar _53, Scalar _54, Scalar _55, Scalar _56, Scalar _57) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50, t._51, t._52, t._53, t._54, t._55, t._56, t._57);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50, Scalar _51, Scalar _52, Scalar _53, Scalar _54, Scalar _55, Scalar _56, Scalar _57, Scalar _58) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50, t._51, t._52, t._53, t._54, t._55, t._56, t._57, t._58);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50, Scalar _51, Scalar _52, Scalar _53, Scalar _54, Scalar _55, Scalar _56, Scalar _57, Scalar _58, Scalar _59) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50, t._51, t._52, t._53, t._54, t._55, t._56, t._57, t._58, t._59);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50, Scalar _51, Scalar _52, Scalar _53, Scalar _54, Scalar _55, Scalar _56, Scalar _57, Scalar _58, Scalar _59, Scalar _60) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50, t._51, t._52, t._53, t._54, t._55, t._56, t._57, t._58, t._59, t._60);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50, Scalar _51, Scalar _52, Scalar _53, Scalar _54, Scalar _55, Scalar _56, Scalar _57, Scalar _58, Scalar _59, Scalar _60, Scalar _61) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50, t._51, t._52, t._53, t._54, t._55, t._56, t._57, t._58, t._59, t._60, t._61);

    /// <summary>
    /// Converts the given tuple of coefficients to the corresponding polynomial.
    /// The coefficients are passed in ascending exponential order, meaning that the i-th coefficient represents the factor for Xⁱ.
    /// </summary>
    /// <param name="t">Tuple of polynomial coefficients.</param>
    public static implicit operator Polynomial((Scalar _0, Scalar _1, Scalar _2, Scalar _3, Scalar _4, Scalar _5, Scalar _6, Scalar _7, Scalar _8, Scalar _9, Scalar _10, Scalar _11, Scalar _12, Scalar _13, Scalar _14, Scalar _15, Scalar _16, Scalar _17, Scalar _18, Scalar _19, Scalar _20, Scalar _21, Scalar _22, Scalar _23, Scalar _24, Scalar _25, Scalar _26, Scalar _27, Scalar _28, Scalar _29, Scalar _30, Scalar _31, Scalar _32, Scalar _33, Scalar _34, Scalar _35, Scalar _36, Scalar _37, Scalar _38, Scalar _39, Scalar _40, Scalar _41, Scalar _42, Scalar _43, Scalar _44, Scalar _45, Scalar _46, Scalar _47, Scalar _48, Scalar _49, Scalar _50, Scalar _51, Scalar _52, Scalar _53, Scalar _54, Scalar _55, Scalar _56, Scalar _57, Scalar _58, Scalar _59, Scalar _60, Scalar _61, Scalar _62) t) =>
        new(t._0, t._1, t._2, t._3, t._4, t._5, t._6, t._7, t._8, t._9, t._10, t._11, t._12, t._13, t._14, t._15, t._16, t._17, t._18, t._19, t._20, t._21, t._22, t._23, t._24, t._25, t._26, t._27, t._28, t._29, t._30, t._31, t._32, t._33, t._34, t._35, t._36, t._37, t._38, t._39, t._40, t._41, t._42, t._43, t._44, t._45, t._46, t._47, t._48, t._49, t._50, t._51, t._52, t._53, t._54, t._55, t._56, t._57, t._58, t._59, t._60, t._61, t._62);
}
