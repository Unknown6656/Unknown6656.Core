///////////////////////////////////////////////////////////////////////
//             AUTOGENERATED 2021-02-25 22:03:20.038467              //
//   All your changes to this file will be lost upon re-generation.  //
///////////////////////////////////////////////////////////////////////

using Unknown6656.Computation.ParticleSwarmOptimization;
using Unknown6656.Mathematics.LinearAlgebra;
using Unknown6656.Mathematics.Analysis;


namespace Unknown6656.Computation.ParticleSwarmOptimization
{
    /// <summary>
    /// A Particle Swarm Optimization (PSO) based solver for 2-dimensional linear equations of the form Ax=b.
    /// </summary>
    public class LinearEquation2Solver
        : YValueFinder<Vector2>
    {
        /// <summary>
        /// The 2x2-matrix A.
        /// </summary>
        public Matrix2 A { get; }
        /// <summary>
        /// The 2-dimensional vector b.
        /// </summary>
        public Vector2 b { get; }


        /// <summary>
        /// Creates the problem definition for the linear equation system Ax=b.
        /// </summary>
        /// <param name="A">The 2x2-matrix A.</param>
        /// <param name="b">The 2-dimensional vector b.</param>
        public LinearEquation2Solver(Matrix2 A, Vector2 b) : base(new Function<Vector2, Vector2>(x => A.Multiply(x)), b) => (this.A, this.b) = (A, b);

        /// <inheritdoc/>
        internal protected override bool IsValidSearchPosition(Vector2 position) => true;
    }

    /// <summary>
    /// A Particle Swarm Optimization (PSO) based solver for 3-dimensional linear equations of the form Ax=b.
    /// </summary>
    public class LinearEquation3Solver
        : YValueFinder<Vector3>
    {
        /// <summary>
        /// The 3x3-matrix A.
        /// </summary>
        public Matrix3 A { get; }
        /// <summary>
        /// The 3-dimensional vector b.
        /// </summary>
        public Vector3 b { get; }


        /// <summary>
        /// Creates the problem definition for the linear equation system Ax=b.
        /// </summary>
        /// <param name="A">The 3x3-matrix A.</param>
        /// <param name="b">The 3-dimensional vector b.</param>
        public LinearEquation3Solver(Matrix3 A, Vector3 b) : base(new Function<Vector3, Vector3>(x => A.Multiply(x)), b) => (this.A, this.b) = (A, b);

        /// <inheritdoc/>
        internal protected override bool IsValidSearchPosition(Vector3 position) => true;
    }

    /// <summary>
    /// A Particle Swarm Optimization (PSO) based solver for 4-dimensional linear equations of the form Ax=b.
    /// </summary>
    public class LinearEquation4Solver
        : YValueFinder<Vector4>
    {
        /// <summary>
        /// The 4x4-matrix A.
        /// </summary>
        public Matrix4 A { get; }
        /// <summary>
        /// The 4-dimensional vector b.
        /// </summary>
        public Vector4 b { get; }


        /// <summary>
        /// Creates the problem definition for the linear equation system Ax=b.
        /// </summary>
        /// <param name="A">The 4x4-matrix A.</param>
        /// <param name="b">The 4-dimensional vector b.</param>
        public LinearEquation4Solver(Matrix4 A, Vector4 b) : base(new Function<Vector4, Vector4>(x => A.Multiply(x)), b) => (this.A, this.b) = (A, b);

        /// <inheritdoc/>
        internal protected override bool IsValidSearchPosition(Vector4 position) => true;
    }

    /// <summary>
    /// A Particle Swarm Optimization (PSO) based solver for 5-dimensional linear equations of the form Ax=b.
    /// </summary>
    public class LinearEquation5Solver
        : YValueFinder<Vector5>
    {
        /// <summary>
        /// The 5x5-matrix A.
        /// </summary>
        public Matrix5 A { get; }
        /// <summary>
        /// The 5-dimensional vector b.
        /// </summary>
        public Vector5 b { get; }


        /// <summary>
        /// Creates the problem definition for the linear equation system Ax=b.
        /// </summary>
        /// <param name="A">The 5x5-matrix A.</param>
        /// <param name="b">The 5-dimensional vector b.</param>
        public LinearEquation5Solver(Matrix5 A, Vector5 b) : base(new Function<Vector5, Vector5>(x => A.Multiply(x)), b) => (this.A, this.b) = (A, b);

        /// <inheritdoc/>
        internal protected override bool IsValidSearchPosition(Vector5 position) => true;
    }

    /// <summary>
    /// A Particle Swarm Optimization (PSO) based solver for 6-dimensional linear equations of the form Ax=b.
    /// </summary>
    public class LinearEquation6Solver
        : YValueFinder<Vector6>
    {
        /// <summary>
        /// The 6x6-matrix A.
        /// </summary>
        public Matrix6 A { get; }
        /// <summary>
        /// The 6-dimensional vector b.
        /// </summary>
        public Vector6 b { get; }


        /// <summary>
        /// Creates the problem definition for the linear equation system Ax=b.
        /// </summary>
        /// <param name="A">The 6x6-matrix A.</param>
        /// <param name="b">The 6-dimensional vector b.</param>
        public LinearEquation6Solver(Matrix6 A, Vector6 b) : base(new Function<Vector6, Vector6>(x => A.Multiply(x)), b) => (this.A, this.b) = (A, b);

        /// <inheritdoc/>
        internal protected override bool IsValidSearchPosition(Vector6 position) => true;
    }

    /// <summary>
    /// A Particle Swarm Optimization (PSO) based solver for 7-dimensional linear equations of the form Ax=b.
    /// </summary>
    public class LinearEquation7Solver
        : YValueFinder<Vector7>
    {
        /// <summary>
        /// The 7x7-matrix A.
        /// </summary>
        public Matrix7 A { get; }
        /// <summary>
        /// The 7-dimensional vector b.
        /// </summary>
        public Vector7 b { get; }


        /// <summary>
        /// Creates the problem definition for the linear equation system Ax=b.
        /// </summary>
        /// <param name="A">The 7x7-matrix A.</param>
        /// <param name="b">The 7-dimensional vector b.</param>
        public LinearEquation7Solver(Matrix7 A, Vector7 b) : base(new Function<Vector7, Vector7>(x => A.Multiply(x)), b) => (this.A, this.b) = (A, b);

        /// <inheritdoc/>
        internal protected override bool IsValidSearchPosition(Vector7 position) => true;
    }

    /// <summary>
    /// A Particle Swarm Optimization (PSO) based solver for 8-dimensional linear equations of the form Ax=b.
    /// </summary>
    public class LinearEquation8Solver
        : YValueFinder<Vector8>
    {
        /// <summary>
        /// The 8x8-matrix A.
        /// </summary>
        public Matrix8 A { get; }
        /// <summary>
        /// The 8-dimensional vector b.
        /// </summary>
        public Vector8 b { get; }


        /// <summary>
        /// Creates the problem definition for the linear equation system Ax=b.
        /// </summary>
        /// <param name="A">The 8x8-matrix A.</param>
        /// <param name="b">The 8-dimensional vector b.</param>
        public LinearEquation8Solver(Matrix8 A, Vector8 b) : base(new Function<Vector8, Vector8>(x => A.Multiply(x)), b) => (this.A, this.b) = (A, b);

        /// <inheritdoc/>
        internal protected override bool IsValidSearchPosition(Vector8 position) => true;
    }

    /// <summary>
    /// A Particle Swarm Optimization (PSO) based solver for 9-dimensional linear equations of the form Ax=b.
    /// </summary>
    public class LinearEquation9Solver
        : YValueFinder<Vector9>
    {
        /// <summary>
        /// The 9x9-matrix A.
        /// </summary>
        public Matrix9 A { get; }
        /// <summary>
        /// The 9-dimensional vector b.
        /// </summary>
        public Vector9 b { get; }


        /// <summary>
        /// Creates the problem definition for the linear equation system Ax=b.
        /// </summary>
        /// <param name="A">The 9x9-matrix A.</param>
        /// <param name="b">The 9-dimensional vector b.</param>
        public LinearEquation9Solver(Matrix9 A, Vector9 b) : base(new Function<Vector9, Vector9>(x => A.Multiply(x)), b) => (this.A, this.b) = (A, b);

        /// <inheritdoc/>
        internal protected override bool IsValidSearchPosition(Vector9 position) => true;
    }

    /// <summary>
    /// A Particle Swarm Optimization (PSO) based solver for 10-dimensional linear equations of the form Ax=b.
    /// </summary>
    public class LinearEquation10Solver
        : YValueFinder<Vector10>
    {
        /// <summary>
        /// The 10x10-matrix A.
        /// </summary>
        public Matrix10 A { get; }
        /// <summary>
        /// The 10-dimensional vector b.
        /// </summary>
        public Vector10 b { get; }


        /// <summary>
        /// Creates the problem definition for the linear equation system Ax=b.
        /// </summary>
        /// <param name="A">The 10x10-matrix A.</param>
        /// <param name="b">The 10-dimensional vector b.</param>
        public LinearEquation10Solver(Matrix10 A, Vector10 b) : base(new Function<Vector10, Vector10>(x => A.Multiply(x)), b) => (this.A, this.b) = (A, b);

        /// <inheritdoc/>
        internal protected override bool IsValidSearchPosition(Vector10 position) => true;
    }

}

namespace Unknown6656.Mathematics.LinearAlgebra
{
    public readonly partial struct Matrix2
    {
        public readonly PSOSolver<Vector2, Scalar, YValueFinder<Function<Vector2, Vector2>, Vector2, Vector2>> CreatePSOSolver(Vector2 b) =>
            CreatePSOSolver(b, PSOSolverConfiguration<Vector2>.CreateDefault(Vector2.Zero));

        public readonly PSOSolver<Vector2, Scalar, YValueFinder<Function<Vector2, Vector2>, Vector2, Vector2>> CreatePSOSolver(Vector2 b, PSOSolverConfiguration<Vector2> configuration) =>
            new LinearEquation2Solver(this, b).CreateSolver(configuration);
    }

    public readonly partial struct Matrix3
    {
        public readonly PSOSolver<Vector3, Scalar, YValueFinder<Function<Vector3, Vector3>, Vector3, Vector3>> CreatePSOSolver(Vector3 b) =>
            CreatePSOSolver(b, PSOSolverConfiguration<Vector3>.CreateDefault(Vector3.Zero));

        public readonly PSOSolver<Vector3, Scalar, YValueFinder<Function<Vector3, Vector3>, Vector3, Vector3>> CreatePSOSolver(Vector3 b, PSOSolverConfiguration<Vector3> configuration) =>
            new LinearEquation3Solver(this, b).CreateSolver(configuration);
    }

    public readonly partial struct Matrix4
    {
        public readonly PSOSolver<Vector4, Scalar, YValueFinder<Function<Vector4, Vector4>, Vector4, Vector4>> CreatePSOSolver(Vector4 b) =>
            CreatePSOSolver(b, PSOSolverConfiguration<Vector4>.CreateDefault(Vector4.Zero));

        public readonly PSOSolver<Vector4, Scalar, YValueFinder<Function<Vector4, Vector4>, Vector4, Vector4>> CreatePSOSolver(Vector4 b, PSOSolverConfiguration<Vector4> configuration) =>
            new LinearEquation4Solver(this, b).CreateSolver(configuration);
    }

    public readonly partial struct Matrix5
    {
        public readonly PSOSolver<Vector5, Scalar, YValueFinder<Function<Vector5, Vector5>, Vector5, Vector5>> CreatePSOSolver(Vector5 b) =>
            CreatePSOSolver(b, PSOSolverConfiguration<Vector5>.CreateDefault(Vector5.Zero));

        public readonly PSOSolver<Vector5, Scalar, YValueFinder<Function<Vector5, Vector5>, Vector5, Vector5>> CreatePSOSolver(Vector5 b, PSOSolverConfiguration<Vector5> configuration) =>
            new LinearEquation5Solver(this, b).CreateSolver(configuration);
    }

    public readonly partial struct Matrix6
    {
        public readonly PSOSolver<Vector6, Scalar, YValueFinder<Function<Vector6, Vector6>, Vector6, Vector6>> CreatePSOSolver(Vector6 b) =>
            CreatePSOSolver(b, PSOSolverConfiguration<Vector6>.CreateDefault(Vector6.Zero));

        public readonly PSOSolver<Vector6, Scalar, YValueFinder<Function<Vector6, Vector6>, Vector6, Vector6>> CreatePSOSolver(Vector6 b, PSOSolverConfiguration<Vector6> configuration) =>
            new LinearEquation6Solver(this, b).CreateSolver(configuration);
    }

    public readonly partial struct Matrix7
    {
        public readonly PSOSolver<Vector7, Scalar, YValueFinder<Function<Vector7, Vector7>, Vector7, Vector7>> CreatePSOSolver(Vector7 b) =>
            CreatePSOSolver(b, PSOSolverConfiguration<Vector7>.CreateDefault(Vector7.Zero));

        public readonly PSOSolver<Vector7, Scalar, YValueFinder<Function<Vector7, Vector7>, Vector7, Vector7>> CreatePSOSolver(Vector7 b, PSOSolverConfiguration<Vector7> configuration) =>
            new LinearEquation7Solver(this, b).CreateSolver(configuration);
    }

    public readonly partial struct Matrix8
    {
        public readonly PSOSolver<Vector8, Scalar, YValueFinder<Function<Vector8, Vector8>, Vector8, Vector8>> CreatePSOSolver(Vector8 b) =>
            CreatePSOSolver(b, PSOSolverConfiguration<Vector8>.CreateDefault(Vector8.Zero));

        public readonly PSOSolver<Vector8, Scalar, YValueFinder<Function<Vector8, Vector8>, Vector8, Vector8>> CreatePSOSolver(Vector8 b, PSOSolverConfiguration<Vector8> configuration) =>
            new LinearEquation8Solver(this, b).CreateSolver(configuration);
    }

    public readonly partial struct Matrix9
    {
        public readonly PSOSolver<Vector9, Scalar, YValueFinder<Function<Vector9, Vector9>, Vector9, Vector9>> CreatePSOSolver(Vector9 b) =>
            CreatePSOSolver(b, PSOSolverConfiguration<Vector9>.CreateDefault(Vector9.Zero));

        public readonly PSOSolver<Vector9, Scalar, YValueFinder<Function<Vector9, Vector9>, Vector9, Vector9>> CreatePSOSolver(Vector9 b, PSOSolverConfiguration<Vector9> configuration) =>
            new LinearEquation9Solver(this, b).CreateSolver(configuration);
    }

    public readonly partial struct Matrix10
    {
        public readonly PSOSolver<Vector10, Scalar, YValueFinder<Function<Vector10, Vector10>, Vector10, Vector10>> CreatePSOSolver(Vector10 b) =>
            CreatePSOSolver(b, PSOSolverConfiguration<Vector10>.CreateDefault(Vector10.Zero));

        public readonly PSOSolver<Vector10, Scalar, YValueFinder<Function<Vector10, Vector10>, Vector10, Vector10>> CreatePSOSolver(Vector10 b, PSOSolverConfiguration<Vector10> configuration) =>
            new LinearEquation10Solver(this, b).CreateSolver(configuration);
    }

}

